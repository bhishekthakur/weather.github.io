[{"C:\\Users\\thaku\\OneDrive\\Desktop\\weather app\\src\\index.js":"1","C:\\Users\\thaku\\OneDrive\\Desktop\\weather app\\src\\App.jsx":"2"},{"size":171,"mtime":1668531698911,"results":"3","hashOfConfig":"4"},{"size":2065,"mtime":1674796875347,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ebg8nb",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"C:\\Users\\thaku\\OneDrive\\Desktop\\weather app\\src\\index.js",[],[],"C:\\Users\\thaku\\OneDrive\\Desktop\\weather app\\src\\App.jsx",["13"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\n\r\nfunction App  () {\r\n    const apiKey = \"f56f24967aaf51182d1d4df628297c6d\"\r\n    const [inputCity,setInputCity] = useState(\"\")\r\n    const [data, setdata] = useState({})\r\n\r\n\r\n    const getWetherDetails = (cityName) => {\r\n      if(!cityName) return\r\n      const apiURL = \"https://api.openweathermap.org/data/2.5/weather?q=\" + cityName + \"&appid=\" + apiKey\r\n      axios.get(apiURL).then((res)=>{\r\n        console.log(\"response\", res.data)\r\n        setdata(res.data)\r\n      }).catch((err)=>{\r\n        console.log(\"err\", err)\r\n      })\r\n    }\r\n\r\n    const handleChangeInput = (e) => {\r\n      console.log(\"value\", e.target.value)\r\n      setInputCity(e.target.value)\r\n    }\r\n\r\n    const handleSearch = () => {\r\n      getWetherDetails(inputCity)\r\n    }\r\n\r\n  useEffect(() => {\r\n    getWetherDetails(\"delhi\")\r\n  },  [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n          <div className=\"weatherBg\">\r\n            <h1 className=\"heading\">Weather App</h1>\r\n\r\n            <div className=\"d-grid gap-3 col-4 mt-4\">\r\n                <input type=\"text\" className=\"form-control\"\r\n                 value={inputCity}\r\n                onChange={handleChangeInput}/>\r\n                <button className=\"btn btn-primary\" type=\"button\"\r\n                   onClick={handleSearch}\r\n                >Search</button>\r\n            </div>\r\n            </div>\r\n\r\n        <div className=\"col-mid-12 text-center mt-5\">\r\n          <div className=\"shadow rounded wetherResultBox\">\r\n            <img className=\"weathorIcon\" \r\n              src=\"https://i.pinimg.com/originals/77/0b/80/770b805d5c99c7931366c2e84e88f251.png\" />\r\n\r\n              <h5 className=\"weathorCity\">\r\n                {data?.name}\r\n              </h5>\r\n              <h6 className=\"weathorTemp\"> {((data?.main?.temp)-273.15).toFixed(2)} Â°C</h6>\r\n          </div>\r\n        </div>\r\n\r\n        </div>\r\n      \r\n     );\r\n\r\n};\r\nexport default App;\r\n",{"ruleId":"14","severity":1,"message":"15","line":57,"column":13,"nodeType":"16","endLine":58,"endColumn":100},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]